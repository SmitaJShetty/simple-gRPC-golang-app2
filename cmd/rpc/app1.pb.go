// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app1.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HiRequest struct {
	Request              string   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiRequest) Reset()         { *m = HiRequest{} }
func (m *HiRequest) String() string { return proto.CompactTextString(m) }
func (*HiRequest) ProtoMessage()    {}
func (*HiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a3d4c9f9092a32b, []int{0}
}

func (m *HiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiRequest.Unmarshal(m, b)
}
func (m *HiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiRequest.Marshal(b, m, deterministic)
}
func (m *HiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiRequest.Merge(m, src)
}
func (m *HiRequest) XXX_Size() int {
	return xxx_messageInfo_HiRequest.Size(m)
}
func (m *HiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HiRequest proto.InternalMessageInfo

func (m *HiRequest) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

type HiResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiResponse) Reset()         { *m = HiResponse{} }
func (m *HiResponse) String() string { return proto.CompactTextString(m) }
func (*HiResponse) ProtoMessage()    {}
func (*HiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a3d4c9f9092a32b, []int{1}
}

func (m *HiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiResponse.Unmarshal(m, b)
}
func (m *HiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiResponse.Marshal(b, m, deterministic)
}
func (m *HiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiResponse.Merge(m, src)
}
func (m *HiResponse) XXX_Size() int {
	return xxx_messageInfo_HiResponse.Size(m)
}
func (m *HiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HiResponse proto.InternalMessageInfo

func (m *HiResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *HiResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*HiRequest)(nil), "rpc.HiRequest")
	proto.RegisterType((*HiResponse)(nil), "rpc.HiResponse")
}

func init() { proto.RegisterFile("app1.proto", fileDescriptor_2a3d4c9f9092a32b) }

var fileDescriptor_2a3d4c9f9092a32b = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2c, 0x28, 0x30,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0x52, 0xe5, 0xe2, 0xf4,
	0xc8, 0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0x82, 0x30, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x25, 0x17, 0x2e, 0x2e, 0x90, 0xb2, 0xe2, 0x82,
	0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x29, 0x2e, 0x8e, 0x22, 0x28, 0x1b, 0xaa, 0x10, 0xce, 0x07, 0xc9,
	0xa5, 0x16, 0x15, 0xe5, 0x17, 0xf9, 0x16, 0xa7, 0x4b, 0x30, 0x41, 0xe4, 0x60, 0x7c, 0x23, 0x23,
	0x2e, 0x16, 0xc7, 0x82, 0x02, 0x43, 0x21, 0x2d, 0x2e, 0xd6, 0xe0, 0xc4, 0x4a, 0x8f, 0x4c, 0x21,
	0x3e, 0xbd, 0xa2, 0x82, 0x64, 0x3d, 0xb8, 0x03, 0xa4, 0xf8, 0xe1, 0x7c, 0x88, 0x69, 0x4a, 0x0c,
	0x49, 0x6c, 0x60, 0xc7, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x42, 0xd6, 0x95, 0xba,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// App1Client is the client API for App1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type App1Client interface {
	SayHi(ctx context.Context, in *HiRequest, opts ...grpc.CallOption) (*HiResponse, error)
}

type app1Client struct {
	cc *grpc.ClientConn
}

func NewApp1Client(cc *grpc.ClientConn) App1Client {
	return &app1Client{cc}
}

func (c *app1Client) SayHi(ctx context.Context, in *HiRequest, opts ...grpc.CallOption) (*HiResponse, error) {
	out := new(HiResponse)
	err := c.cc.Invoke(ctx, "/rpc.App1/SayHi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// App1Server is the server API for App1 service.
type App1Server interface {
	SayHi(context.Context, *HiRequest) (*HiResponse, error)
}

// UnimplementedApp1Server can be embedded to have forward compatible implementations.
type UnimplementedApp1Server struct {
}

func (*UnimplementedApp1Server) SayHi(ctx context.Context, req *HiRequest) (*HiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHi not implemented")
}

func RegisterApp1Server(s *grpc.Server, srv App1Server) {
	s.RegisterService(&_App1_serviceDesc, srv)
}

func _App1_SayHi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(App1Server).SayHi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.App1/SayHi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(App1Server).SayHi(ctx, req.(*HiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.App1",
	HandlerType: (*App1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHi",
			Handler:    _App1_SayHi_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app1.proto",
}
